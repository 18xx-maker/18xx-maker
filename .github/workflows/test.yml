on:
  pull_request:
    branches:
      - main
  merge_group:
    types:
      - checks_requested
name: Test
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Corepack
        run: corepack enable
      - name: Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"
      - name: Cache
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: linux-node-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Commits
        uses: wagoid/commitlint-github-action@v6
        if: github.event_name == 'pull_request'
      - name: Dependencies
        run: yarn --immutable
      - name: Build Web
        run: yarn build
      - name: Build App
        run: yarn build:app
      - name: Summary
        run: "echo :package: Build tests succeeded >> $GITHUB_STEP_SUMMARY"
  test:
    strategy:
      matrix:
        os:
          - name: Linux
            slug: linux
            image: ubuntu-latest
            emoji: penguin
          - name: Mac
            slug: mac
            image: macos-latest
            emoji: apple
          - name: Windows
            slug: windows
            image: windows-latest
            emoji: window
    name: ${{ matrix.os.name }}
    runs-on: ${{ matrix.os.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Corepack
        run: corepack enable
      - name: Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"
      - name: Cache
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ matrix.os.slug }}-node-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Dependencies
        run: |
          yarn --immutable
          yarn playwright install chromium --only-shell --with-deps
      - name: Pretty
        run: yarn pretty
      - name: Lint
        run: yarn lint
      - name: Validate
        run: yarn validate
      - name: Test
        run: yarn test
      - name: Coverage
        uses: coverallsapp/github-action@v2
        if: matrix.os.slug == 'linux'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Summary
        shell: bash
        run: "echo :${{ matrix.os.emoji }}: ${{ matrix.os.name }} tests succeeded >> $GITHUB_STEP_SUMMARY"
