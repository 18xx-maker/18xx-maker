env:
  PLAYWRIGHT_BROWSERS_PATH: browsers
on:
  pull_request:
    branches:
      - main
  merge_group:
    types:
      - checks_requested
name: Test
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: $((1 + ${{ github.event.pull_request.commits }}))
      - name: PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Node
        uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          node-version: 22
      - name: Dependencies
        run: pnpm install
      - name: Commitlint
        run: pnpm commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose
      - name: Prettier
        run: pnpm pretty
      - name: ESLint and Stylelint
        run: pnpm lint
      - name: 18xx Maker Validate
        run: pnpm validate
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Node
        uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          node-version: 22
      - name: Dependencies
        run: pnpm install
      - name: Build Web
        run: pnpm build
      - name: Build App
        run: pnpm build:app
      - name: Summary
        run: "echo :package: Build tests succeeded >> $GITHUB_STEP_SUMMARY"
  test:
    strategy:
      matrix:
        node: [22]
        os:
          - name: Linux
            slug: linux
            image: ubuntu-latest
          - name: Mac
            slug: mac
            image: macos-latest
          - name: Windows
            slug: windows
            image: windows-latest
    name: ${{ matrix.os.name }}
    runs-on: ${{ matrix.os.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Node
        uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          node-version: ${{ matrix.node }}
      - name: Dependencies
        run: pnpm install
      - name: Playwright Version
        id: playwright-version
        shell: bash
        run: echo "PLAYWRIGHT_VERSION=$(pnpm exec playwright --version | awk '{ print $2 }')" >> $GITHUB_OUTPUT
      - name: Playwright Cache
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: browsers
          key: ${{ matrix.os.slug }}-browsers-${{ steps.playwright-version.outputs.PLAYWRIGHT_VERSION }}
      - name: Playwright Install
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm playwright install chromium --only-shell --with-deps
      - name: Test
        run: pnpm test
      - name: Coverage
        uses: coverallsapp/github-action@v2
        if: matrix.os.slug == 'linux'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
